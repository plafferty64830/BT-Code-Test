package codeTest;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.*;
import java.util.ArrayList;

public class Main {

	public static void main(String[] args) throws IOException {

		Scanner sc = new Scanner(System.in);

		String filename = "";
		System.out.println("Please enter the full name of the Comma Seperated \nValue file that you wish to examine?");
		filename = sc.next();

		try (Stream<String> stream = Files.lines(Paths.get(filename))) {

			System.out.println("All routers: \n");
			stream.forEach(System.out::println);
		}

		try {

			File inputFile = new File("sample.csv");
			File outputFile = new File("Output.txt");

			BufferedReader reader = new BufferedReader(new FileReader(inputFile));

			String strLine;

			ArrayList<String> lines = new ArrayList<String>();

			while ((strLine = reader.readLine()) != null) {

				lines.add(strLine);

			}

			ArrayList<String> hostname = new ArrayList<String>();
			ArrayList<String> IP = new ArrayList<String>();
			String[] array;

			for (int i = 1; i < lines.size(); i++) {
				String tempVal;
				tempVal = lines.get(i);
				array = tempVal.split(",");
				hostname.add(array[0].toLowerCase());
				IP.add(array[1]);
			}
			
			for(int i=0; i<hostname.size(); i++){
				String temp = hostname.get(i);
				for(int j=0; j<hostname.size();j++){
					String temp2 = hostname.get(j);
					if(!(i == j)){
						if(temp.equals(temp2)){
							System.err.println("remove");
							hostname.remove(i);
							hostname.remove(j);
							lines.remove(i+1);
							lines.remove(j+1);
						}
					}
				}
			}
			int count = 0;
			ArrayList<String> temp = new ArrayList<String>();
			ArrayList<String> temp2 = new ArrayList<String>();
			for(String x : IP){
				int count2 = 0;
				
				for(String j : IP){
					
					if(count != count2){
						if(x.equals(j)){
							temp.add(j);
							temp2.add(x);
							//IP.remove(x);
							//IP.remove(j);
						System.out.println("remove2");
						}
					}
					count2++;
				}
				count++;
			}
			System.err.println("lines size is "+lines.size());
			
			for(String x : temp){
				IP.remove(x);
			}
			
			for(String x : temp2){
				IP.remove(x);
			}
			
			for(int i=0; i<lines.size();i++){
				if(lines.get(i).contains("yes")){
					lines.remove(i);
					System.err.println("remove yes");
				}
			}

			
			for(int i=1; i<lines.size();i++){
				String[] array1 = lines.get(i).split(",");
				double versionNumber = Double.parseDouble(array1[3]);
				if(versionNumber < 12){
					lines.remove(i);
				}
				
			}
			
				
				
				
				for(String x : lines){
					System.out.println(x);
				}
				
				
			/*List<String> patched = Files.lines(Paths.get(filename)).filter(x -> !x.contains("yes"))
					.filter(x -> !x.contains("11")).collect(Collectors.toList());
					*/

			// List<String> OSVersion = Files.lines(Paths.get(filename)).
			// filter(x -> ).collect(Collectors.toList());

			// List<String> DuplicateIP = Files.lines(Paths.get(filename)).
			// filter(x -> !x.contains("yes")).collect(Collectors.toList());

			// List<String> DuplicateHost = Files.lines(Paths.get(filename)).
			// filter(x -> !x.contains("yes")).collect(Collectors.toList());

			////Files.write(Paths.get("Output.txt"), patched);
			// Files.write(Paths.get("Output.txt"),OSVersion);
			// Files.write(Paths.get("Output.txt"),DuplicateIP);
			// Files.write(Paths.get("Output.txt"),DuplicateHost);

			/*String OutputFile = "Output.txt";

			try (Stream<String> stream = Files.lines(Paths.get(OutputFile))) {

				System.out.println("\nRouter(s) that can be patched: \n");
				stream.forEach(System.out::println);
			}
*/
		} catch (Exception e) {
			System.err.println("Error: " + e.getMessage());
		}
	}
}

