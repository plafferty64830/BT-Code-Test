package codeTest;

import java.io.BufferedReader; 
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.*;

public class Main {

    public static void main(String[] args) throws IOException {

    	Scanner sc = new Scanner(System.in);
    	
    	String filename = "";
    	System.out.println("Please enter the full name of the Comma Seperated \nValue file that you wish to examine?");
    	filename = sc.next();
    	


        try(Stream<String> stream = Files.lines(Paths.get(filename))){

        	System.out.println("All routers: \n");
            stream.forEach(System.out::println);
        }

        try {

        	File inputFile = new File("sample.csv");
        	File outputFile = new File("Output.txt");
        	
            BufferedReader reader = new BufferedReader(new FileReader(inputFile));
        
            
            
            String strLine;
            java.util.ArrayList<String> list = new java.util.ArrayList<String>();
            
            while((strLine = reader.readLine()) != null){
            	
            	strLine.split(",");
            	list.add(strLine);
            	
            }
      
            List<String> patched = Files.lines(Paths.get(filename)).
            		filter(x -> !x.contains("yes")).filter(x -> !x.contains("11")).collect(Collectors.toList());
            
           // List<String> OSVersion = Files.lines(Paths.get(filename)).
                    //filter(x -> !x.contains("11")).collect(Collectors.toList());
            
           // List<String> DuplicateIP = Files.lines(Paths.get(filename)).
                   // filter(x -> !x.contains("yes")).collect(Collectors.toList());
            
           // List<String> DuplicateHost = Files.lines(Paths.get(filename)).
                  //  filter(x -> !x.contains("yes")).collect(Collectors.toList());
            
            
            
            
            Files.write(Paths.get("Output.txt"),patched);
            //Files.write(Paths.get("Output.txt"),OSVersion);
           // Files.write(Paths.get("Output.txt"),DuplicateIP);
           // Files.write(Paths.get("Output.txt"),DuplicateHost);
            
            
            
            String OutputFile = "Output.txt";


            try(Stream<String> stream = Files.lines(Paths.get(OutputFile))){

            	System.out.println("\nRouter(s) that can be patched: \n");
                stream.forEach(System.out::println);
            }
            
        } catch(Exception e){
        	System.err.println("Error: " + e.getMessage());
        }
    }
    }

            